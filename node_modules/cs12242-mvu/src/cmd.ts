import { pipe } from "effect"
import { Array } from "effect/Array"
import { Model, Config, Egg, Eggnemies, EggUtils } from "../../../implementation2/src"

export type Cmd<Msg> = {
  sub: (dispatch: (msg: Msg) => void) => Promise<void>
}

export namespace Cmd {
  export const ofSub = <Msg>(
    sub: (dispatch: (msg: Msg) => void) => Promise<void>,
  ): Cmd<Msg> => ({
    sub,
  })
}

export type ModelCmd<Model, Msg> =
  | Model
  | {
      model: Model
      cmd: Cmd<Msg>
    }
export const initModel = pipe(
  Model.make({
    config: Config.make({
      screenWidth: 600,
      screenHeight: 600,
      fps: 30,
      canvasId: "canvas",
      velocity: 20,
    }),
    egg: Egg.make({
      x: 0,
      y: 0,
      width: 20,
      height: 20,
      vy: 0,
      vx: 0,
    }),
    eggnemies: pipe(
      [1, 2, 3, 4],
      Array.map((id) => Eggnemies.make({
        x: Math.random() * 600,
        y: Math.random() * 600,
        width: 20,
        height: 20,
        vx: Math.random() * 2 - 1,
        vy: Math.random() * 2 - 1,
        id,
      })
      )
    ),
    isGameOver: false,
    score: 0,
    ticks: 0,
  }),
  (model) => EggUtils.updateInModel(model, {
    x: model.config.screenWidth / 2,
    y: model.config.screenHeight / 2,
  })
)
